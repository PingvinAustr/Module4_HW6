// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module4_HW6;

#nullable disable

namespace Module4HW6.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230112160548_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Module4_HW6.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArtistId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ArtistName");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InstagramUrl");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists", (string)null);

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            ArtistName = "Rammstein",
                            DateOfBirth = new DateTime(1994, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            InstagramUrl = "https://www.instagram.com/rammsteinofficial/",
                            Phone = "380632140021"
                        },
                        new
                        {
                            ArtistId = 2,
                            ArtistName = "Eminem",
                            DateOfBirth = new DateTime(1972, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            InstagramUrl = "https://www.instagram.com/eminem/",
                            Phone = ""
                        },
                        new
                        {
                            ArtistId = 3,
                            ArtistName = "Maroon 5",
                            DateOfBirth = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            InstagramUrl = "https://www.instagram.com/maroon5/",
                            Phone = ""
                        },
                        new
                        {
                            ArtistId = 4,
                            ArtistName = "Alan Walker",
                            DateOfBirth = new DateTime(1997, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            InstagramUrl = "https://www.instagram.com/alanwalkermusic/",
                            Phone = ""
                        },
                        new
                        {
                            ArtistId = 5,
                            ArtistName = "Ukraine",
                            DateOfBirth = new DateTime(2023, 1, 12, 18, 5, 48, 442, DateTimeKind.Local).AddTicks(8810),
                            Email = "",
                            InstagramUrl = "",
                            Phone = ""
                        },
                        new
                        {
                            ArtistId = 6,
                            ArtistName = "ReSinger",
                            DateOfBirth = new DateTime(2023, 1, 12, 18, 5, 48, 442, DateTimeKind.Local).AddTicks(8842),
                            Email = "",
                            InstagramUrl = "",
                            Phone = ""
                        });
                });

            modelBuilder.Entity("Module4_HW6.Models.ArtistsSongs", b =>
                {
                    b.Property<int>("ArtistsSongsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArtistsSongsId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistsSongsId"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("ArtistId");

                    b.Property<int>("SongId")
                        .HasColumnType("int")
                        .HasColumnName("SongId");

                    b.HasKey("ArtistsSongsId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistsSongs", (string)null);

                    b.HasData(
                        new
                        {
                            ArtistsSongsId = 1,
                            ArtistId = 2,
                            SongId = 1
                        },
                        new
                        {
                            ArtistsSongsId = 2,
                            ArtistId = 1,
                            SongId = 2
                        },
                        new
                        {
                            ArtistsSongsId = 3,
                            ArtistId = 5,
                            SongId = 3
                        },
                        new
                        {
                            ArtistsSongsId = 4,
                            ArtistId = 3,
                            SongId = 4
                        },
                        new
                        {
                            ArtistsSongsId = 5,
                            ArtistId = 4,
                            SongId = 5
                        },
                        new
                        {
                            ArtistsSongsId = 6,
                            ArtistId = 6,
                            SongId = 1
                        },
                        new
                        {
                            ArtistsSongsId = 7,
                            ArtistId = 6,
                            SongId = 2
                        },
                        new
                        {
                            ArtistsSongsId = 8,
                            ArtistId = 6,
                            SongId = 3
                        },
                        new
                        {
                            ArtistsSongsId = 9,
                            ArtistId = 6,
                            SongId = 4
                        },
                        new
                        {
                            ArtistsSongsId = 10,
                            ArtistId = 6,
                            SongId = 5
                        });
                });

            modelBuilder.Entity("Module4_HW6.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GenreId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("GenreName");

                    b.HasKey("GenreId");

                    b.ToTable("Genres", (string)null);

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "Rock"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Pop"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Folk"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "Rap"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Electro"
                        });
                });

            modelBuilder.Entity("Module4_HW6.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SongId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongId"));

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleaseDate");

                    b.Property<int>("SongDuration")
                        .HasColumnType("int")
                        .HasColumnName("SongDuration");

                    b.Property<string>("SongTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("SongTitle");

                    b.HasKey("SongId");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs", (string)null);

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            GenreId = 4,
                            ReleaseDate = new DateTime(2013, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongDuration = 363,
                            SongTitle = "Rap god"
                        },
                        new
                        {
                            SongId = 2,
                            GenreId = 1,
                            ReleaseDate = new DateTime(2019, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongDuration = 323,
                            SongTitle = "Deutschland"
                        },
                        new
                        {
                            SongId = 3,
                            GenreId = 3,
                            ReleaseDate = new DateTime(1914, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongDuration = 195,
                            SongTitle = "Oy U Luzi Chervona Kalyna"
                        },
                        new
                        {
                            SongId = 4,
                            GenreId = 2,
                            ReleaseDate = new DateTime(2011, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongDuration = 201,
                            SongTitle = "Moves like Jagger"
                        },
                        new
                        {
                            SongId = 5,
                            GenreId = 5,
                            ReleaseDate = new DateTime(2016, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongDuration = 162,
                            SongTitle = "Alone"
                        });
                });

            modelBuilder.Entity("Module4_HW6.Models.ArtistsSongs", b =>
                {
                    b.HasOne("Module4_HW6.Models.Artist", "Artist")
                        .WithMany("ArtistsSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module4_HW6.Models.Song", "Song")
                        .WithMany("ArtistsSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Module4_HW6.Models.Song", b =>
                {
                    b.HasOne("Module4_HW6.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Module4_HW6.Models.Artist", b =>
                {
                    b.Navigation("ArtistsSongs");
                });

            modelBuilder.Entity("Module4_HW6.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Module4_HW6.Models.Song", b =>
                {
                    b.Navigation("ArtistsSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
